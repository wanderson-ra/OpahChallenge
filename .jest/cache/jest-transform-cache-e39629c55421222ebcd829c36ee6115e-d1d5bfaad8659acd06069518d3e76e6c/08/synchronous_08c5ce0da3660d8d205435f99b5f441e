8251ac240a459cdfb52d0f57903e60d5
'use strict';

var Promise = require('./core.js');

module.exports = Promise;

Promise.enableSynchronous = function () {
  Promise.prototype.isPending = function () {
    return this.getState() == 0;
  };

  Promise.prototype.isFulfilled = function () {
    return this.getState() == 1;
  };

  Promise.prototype.isRejected = function () {
    return this.getState() == 2;
  };

  Promise.prototype.getValue = function () {
    if (this._V === 3) {
      return this._W.getValue();
    }

    if (!this.isFulfilled()) {
      throw new Error('Cannot get a value of an unfulfilled promise.');
    }

    return this._W;
  };

  Promise.prototype.getReason = function () {
    if (this._V === 3) {
      return this._W.getReason();
    }

    if (!this.isRejected()) {
      throw new Error('Cannot get a rejection reason of a non-rejected promise.');
    }

    return this._W;
  };

  Promise.prototype.getState = function () {
    if (this._V === 3) {
      return this._W.getState();
    }

    if (this._V === -1 || this._V === -2) {
      return 0;
    }

    return this._V;
  };
};

Promise.disableSynchronous = function () {
  Promise.prototype.isPending = undefined;
  Promise.prototype.isFulfilled = undefined;
  Promise.prototype.isRejected = undefined;
  Promise.prototype.getValue = undefined;
  Promise.prototype.getReason = undefined;
  Promise.prototype.getState = undefined;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN5bmNocm9ub3VzLmpzIl0sIm5hbWVzIjpbIlByb21pc2UiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImVuYWJsZVN5bmNocm9ub3VzIiwicHJvdG90eXBlIiwiaXNQZW5kaW5nIiwiZ2V0U3RhdGUiLCJpc0Z1bGZpbGxlZCIsImlzUmVqZWN0ZWQiLCJnZXRWYWx1ZSIsIl9WIiwiX1ciLCJFcnJvciIsImdldFJlYXNvbiIsImRpc2FibGVTeW5jaHJvbm91cyIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFyQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxPQUFqQjs7QUFDQUEsT0FBTyxDQUFDSSxpQkFBUixHQUE0QixZQUFZO0FBQ3RDSixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JDLFNBQWxCLEdBQThCLFlBQVc7QUFDdkMsV0FBTyxLQUFLQyxRQUFMLE1BQW1CLENBQTFCO0FBQ0QsR0FGRDs7QUFJQVAsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCRyxXQUFsQixHQUFnQyxZQUFXO0FBQ3pDLFdBQU8sS0FBS0QsUUFBTCxNQUFtQixDQUExQjtBQUNELEdBRkQ7O0FBSUFQLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkksVUFBbEIsR0FBK0IsWUFBVztBQUN4QyxXQUFPLEtBQUtGLFFBQUwsTUFBbUIsQ0FBMUI7QUFDRCxHQUZEOztBQUlBUCxFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JLLFFBQWxCLEdBQTZCLFlBQVk7QUFDdkMsUUFBSSxLQUFLQyxFQUFMLEtBQVksQ0FBaEIsRUFBbUI7QUFDakIsYUFBTyxLQUFLQyxFQUFMLENBQVFGLFFBQVIsRUFBUDtBQUNEOztBQUVELFFBQUksQ0FBQyxLQUFLRixXQUFMLEVBQUwsRUFBeUI7QUFDdkIsWUFBTSxJQUFJSyxLQUFKLENBQVUsK0NBQVYsQ0FBTjtBQUNEOztBQUVELFdBQU8sS0FBS0QsRUFBWjtBQUNELEdBVkQ7O0FBWUFaLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQlMsU0FBbEIsR0FBOEIsWUFBWTtBQUN4QyxRQUFJLEtBQUtILEVBQUwsS0FBWSxDQUFoQixFQUFtQjtBQUNqQixhQUFPLEtBQUtDLEVBQUwsQ0FBUUUsU0FBUixFQUFQO0FBQ0Q7O0FBRUQsUUFBSSxDQUFDLEtBQUtMLFVBQUwsRUFBTCxFQUF3QjtBQUN0QixZQUFNLElBQUlJLEtBQUosQ0FBVSwwREFBVixDQUFOO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLRCxFQUFaO0FBQ0QsR0FWRDs7QUFZQVosRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCRSxRQUFsQixHQUE2QixZQUFZO0FBQ3ZDLFFBQUksS0FBS0ksRUFBTCxLQUFZLENBQWhCLEVBQW1CO0FBQ2pCLGFBQU8sS0FBS0MsRUFBTCxDQUFRTCxRQUFSLEVBQVA7QUFDRDs7QUFDRCxRQUFJLEtBQUtJLEVBQUwsS0FBWSxDQUFDLENBQWIsSUFBa0IsS0FBS0EsRUFBTCxLQUFZLENBQUMsQ0FBbkMsRUFBc0M7QUFDcEMsYUFBTyxDQUFQO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLQSxFQUFaO0FBQ0QsR0FURDtBQVVELENBL0NEOztBQWlEQVgsT0FBTyxDQUFDZSxrQkFBUixHQUE2QixZQUFXO0FBQ3RDZixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JDLFNBQWxCLEdBQThCVSxTQUE5QjtBQUNBaEIsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCRyxXQUFsQixHQUFnQ1EsU0FBaEM7QUFDQWhCLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkksVUFBbEIsR0FBK0JPLFNBQS9CO0FBQ0FoQixFQUFBQSxPQUFPLENBQUNLLFNBQVIsQ0FBa0JLLFFBQWxCLEdBQTZCTSxTQUE3QjtBQUNBaEIsRUFBQUEsT0FBTyxDQUFDSyxTQUFSLENBQWtCUyxTQUFsQixHQUE4QkUsU0FBOUI7QUFDQWhCLEVBQUFBLE9BQU8sQ0FBQ0ssU0FBUixDQUFrQkUsUUFBbEIsR0FBNkJTLFNBQTdCO0FBQ0QsQ0FQRCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIFByb21pc2UgPSByZXF1aXJlKCcuL2NvcmUuanMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlO1xuUHJvbWlzZS5lbmFibGVTeW5jaHJvbm91cyA9IGZ1bmN0aW9uICgpIHtcbiAgUHJvbWlzZS5wcm90b3R5cGUuaXNQZW5kaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3RhdGUoKSA9PSAwO1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLmlzRnVsZmlsbGVkID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U3RhdGUoKSA9PSAxO1xuICB9O1xuXG4gIFByb21pc2UucHJvdG90eXBlLmlzUmVqZWN0ZWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGF0ZSgpID09IDI7XG4gIH07XG5cbiAgUHJvbWlzZS5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX1YgPT09IDMpIHtcbiAgICAgIHJldHVybiB0aGlzLl9XLmdldFZhbHVlKCk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmlzRnVsZmlsbGVkKCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGdldCBhIHZhbHVlIG9mIGFuIHVuZnVsZmlsbGVkIHByb21pc2UuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX1c7XG4gIH07XG5cbiAgUHJvbWlzZS5wcm90b3R5cGUuZ2V0UmVhc29uID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl9WID09PSAzKSB7XG4gICAgICByZXR1cm4gdGhpcy5fVy5nZXRSZWFzb24oKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuaXNSZWplY3RlZCgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBnZXQgYSByZWplY3Rpb24gcmVhc29uIG9mIGEgbm9uLXJlamVjdGVkIHByb21pc2UuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX1c7XG4gIH07XG5cbiAgUHJvbWlzZS5wcm90b3R5cGUuZ2V0U3RhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX1YgPT09IDMpIHtcbiAgICAgIHJldHVybiB0aGlzLl9XLmdldFN0YXRlKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9WID09PSAtMSB8fCB0aGlzLl9WID09PSAtMikge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX1Y7XG4gIH07XG59O1xuXG5Qcm9taXNlLmRpc2FibGVTeW5jaHJvbm91cyA9IGZ1bmN0aW9uKCkge1xuICBQcm9taXNlLnByb3RvdHlwZS5pc1BlbmRpbmcgPSB1bmRlZmluZWQ7XG4gIFByb21pc2UucHJvdG90eXBlLmlzRnVsZmlsbGVkID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5pc1JlamVjdGVkID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5nZXRWYWx1ZSA9IHVuZGVmaW5lZDtcbiAgUHJvbWlzZS5wcm90b3R5cGUuZ2V0UmVhc29uID0gdW5kZWZpbmVkO1xuICBQcm9taXNlLnByb3RvdHlwZS5nZXRTdGF0ZSA9IHVuZGVmaW5lZDtcbn07XG4iXX0=