{"version":3,"sources":["getDataStorageUseCase.unit.test.ts"],"names":["describe","beforeAll","it","valueString","key","mockedStorageGateway","jest","spyOn","StorageGateway","calledWith","mockResolvedValue","GetDataStorageUseCase","get","dataResponse","expect","toEqual","toBeCalledWith"],"mappings":";;;;;;AAAA;;AAEA;;AAEA;;AAEAA,QAAQ,CAAC,gCAAD,EAAmC,YAAM;AAC7CC,EAAAA,SAAS,CAAC,YAAM;AACZ;AACH,GAFQ,CAAT;AAIAC,EAAAA,EAAE,CAAC,+BAAD,EAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,WAD0B,GACZ,gBADY;AAE1BC,YAAAA,GAF0B,GAEpB,QAFoB;AAI1BC,YAAAA,oBAJ0B,GAIHC,IAAI,CAACC,KAAL,CAAWC,cAAX,EAA2B,KAA3B,CAJG;AAKhC,gCAAKH,oBAAL,EAA2BI,UAA3B,CAAsCL,GAAtC,EAA2CM,iBAA3C,CAA6DP,WAA7D;AALgC;AAAA,8CAOLQ,qBAAqB,CAACC,GAAtB,CAA0BR,GAA1B,CAPK;;AAAA;AAO1BS,YAAAA,YAP0B;AAShCC,YAAAA,MAAM,CAACD,YAAD,CAAN,CAAqBE,OAArB,CAA6BZ,WAA7B;AACAW,YAAAA,MAAM,CAACT,oBAAD,CAAN,CAA6BW,cAA7B,CAA4CZ,GAA5C;;AAVgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC,CAAF;AAYH,CAjBO,CAAR","sourcesContent":["import { when, resetAllWhenMocks } from \"jest-when\";\n\nimport * as StorageGateway from \"../../../src/gateways/storage/storageGateway\";\n\nimport * as GetDataStorageUseCase from \"../../../src/useCases/getDataStorageUseCase\";\n\ndescribe(\"Tests of GetDataStorageUseCase\", () => {\n    beforeAll(() => {\n        resetAllWhenMocks();\n    });\n\n    it(\"Test with success string data\", async () => {\n        const valueString = \"anyValueString\";\n        const key = \"anyKey\";\n\n        const mockedStorageGateway = jest.spyOn(StorageGateway, \"get\");\n        when(mockedStorageGateway).calledWith(key).mockResolvedValue(valueString);\n\n        const dataResponse = await GetDataStorageUseCase.get(key);\n\n        expect(dataResponse).toEqual(valueString);\n        expect(mockedStorageGateway).toBeCalledWith(key);\n    });\n});\n"]}