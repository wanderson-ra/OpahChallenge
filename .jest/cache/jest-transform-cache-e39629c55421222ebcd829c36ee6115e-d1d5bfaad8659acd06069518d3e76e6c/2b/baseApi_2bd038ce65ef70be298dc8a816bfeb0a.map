{"version":3,"sources":["baseApi.ts"],"names":["getAxiosInstance","baseURL","axiosInstance","axios","create","timeout","headers","Accept","get","baseUrl","url","response"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAoC;AACzD,MAAMC,aAA4B,GAAGC,eAAMC,MAAN,CAAa;AAC9CH,IAAAA,OAAO,EAAEA,OADqC;AAE9CI,IAAAA,OAAO,EAAE,KAFqC;AAG9CC,IAAAA,OAAO,EAAE;AACLA,MAAAA,OAAO,EAAE;AACL,wBAAgB,gCADX;AAELC,QAAAA,MAAM,EAAE;AAFH;AADJ;AAHqC,GAAb,CAArC;;AAUA,SAAOL,aAAP;AACH,CAZD;;AAcO,IAAMM,GAAG,GAAG,SAANA,GAAM,CAAwBC,OAAxB,EAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACwCV,gBAAgB,CAACS,OAAD,CAAhB,CAA0BD,GAA1B,CAA8BE,GAA9B,CADxC;;AAAA;AACTC,UAAAA,QADS;AAAA,2CAGRA,QAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ","sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from \"axios\";\n\nconst getAxiosInstance = (baseURL: string): AxiosInstance => {\n    const axiosInstance: AxiosInstance = axios.create({\n        baseURL: baseURL,\n        timeout: 30000,\n        headers: {\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\",\n                Accept: \"application/json\",\n            },\n        },\n    });\n    return axiosInstance;\n};\n\nexport const get = async <GenericResponse>(baseUrl: string, url: string): Promise<AxiosResponse<GenericResponse>> => {\n    const response: AxiosResponse<GenericResponse> = await getAxiosInstance(baseUrl).get(url);\n\n    return response;\n};\n"]}