{"version":3,"sources":["findAllFilmsAndAddImageUrlUseCase.ts"],"names":["findUrlImageByFilm","filmsWithoutImageUrl","map","film","imageUrlByFilmFinded","imageUrlsByFilm","find","imageUrlByFilm","episodeId","Film","imageUrl","url","findAll","FilmGateway","filmsWithImageUrl"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,oBAAD,EAAoD;AAC3E,SAAOA,oBAAoB,CAACC,GAArB,CAAyB,UAACC,IAAD,EAAU;AACtC,QAAMC,oBAAoB,GAAGC,wBAAgBC,IAAhB,CACzB,UAACC,cAAD;AAAA,aAAoBA,cAAc,CAACC,SAAf,KAA6BL,IAAI,CAACK,SAAtD;AAAA,KADyB,CAA7B;;AAIA,WAAO,IAAIC,WAAJ,4BAAcN,IAAd;AAAoBO,MAAAA,QAAQ,EAAEN,oBAAF,oBAAEA,oBAAoB,CAAEO;AAApD,OAAP;AACH,GANM,CAAP;AAOH,CARD;;AAUO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACgBC,WAAW,CAACD,OAAZ,EADhB;;AAAA;AACbX,UAAAA,oBADa;AAGba,UAAAA,iBAHa,GAGOd,kBAAkB,CAACC,oBAAD,CAHzB;AAAA,2CAKZa,iBALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import * as FilmGateway from \"src/gateways/http/film/filmGateway\";\n\nimport { Film } from \"src/domains/films\";\n\nimport { imageUrlsByFilm } from \"src/globals/constants/films\";\n\nconst findUrlImageByFilm = (filmsWithoutImageUrl: Array<Film>): Array<Film> => {\n    return filmsWithoutImageUrl.map((film) => {\n        const imageUrlByFilmFinded = imageUrlsByFilm.find(\n            (imageUrlByFilm) => imageUrlByFilm.episodeId === film.episodeId\n        );\n\n        return new Film({ ...film, imageUrl: imageUrlByFilmFinded?.url });\n    });\n};\n\nexport const findAll = async (): Promise<Array<Film>> => {\n    const filmsWithoutImageUrl = await FilmGateway.findAll();\n\n    const filmsWithImageUrl = findUrlImageByFilm(filmsWithoutImageUrl);\n\n    return filmsWithImageUrl;\n};\n"]}