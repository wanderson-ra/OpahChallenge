a9f28d1d812191d2dd7f332ddfaabf4f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findByEpisodeId = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _films = require("../../../domains/films");

var _properties = require("../../../configurations/properties");

var _baseApi = require("../baseApi");

var _handlerError = require("./handlerError");

var mapperFilmFromFilmResponseJson = function mapperFilmFromFilmResponseJson(filmResponseJson) {
  return new _films.Film({
    characters: filmResponseJson.characters,
    created: filmResponseJson.created,
    director: filmResponseJson.director,
    edited: filmResponseJson.edited,
    episodeId: filmResponseJson.episode_id,
    openingCrawl: filmResponseJson.opening_crawl,
    planets: filmResponseJson.planets,
    producer: filmResponseJson.producer,
    releaseDate: filmResponseJson.release_date,
    species: filmResponseJson.species,
    starships: filmResponseJson.starships,
    title: filmResponseJson.title,
    url: filmResponseJson.url,
    vehicles: filmResponseJson.vehicles
  });
};

var findByEpisodeId = function findByEpisodeId(episodeId) {
  var specialitiesResponse;
  return _regenerator.default.async(function findByEpisodeId$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return _regenerator.default.awrap((0, _baseApi.get)(_properties.properties.startWars.baseUrl, "/films/" + episodeId));

        case 3:
          specialitiesResponse = _context.sent;
          return _context.abrupt("return", mapperFilmFromFilmResponseJson(specialitiesResponse.data));

        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](0);
          throw (0, _handlerError.handlerSpecialityError)(_context.t0);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[0, 7]], Promise);
};

exports.findByEpisodeId = findByEpisodeId;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbG1HYXRld2F5LnRzIl0sIm5hbWVzIjpbIm1hcHBlckZpbG1Gcm9tRmlsbVJlc3BvbnNlSnNvbiIsImZpbG1SZXNwb25zZUpzb24iLCJGaWxtIiwiY2hhcmFjdGVycyIsImNyZWF0ZWQiLCJkaXJlY3RvciIsImVkaXRlZCIsImVwaXNvZGVJZCIsImVwaXNvZGVfaWQiLCJvcGVuaW5nQ3Jhd2wiLCJvcGVuaW5nX2NyYXdsIiwicGxhbmV0cyIsInByb2R1Y2VyIiwicmVsZWFzZURhdGUiLCJyZWxlYXNlX2RhdGUiLCJzcGVjaWVzIiwic3RhcnNoaXBzIiwidGl0bGUiLCJ1cmwiLCJ2ZWhpY2xlcyIsImZpbmRCeUVwaXNvZGVJZCIsInByb3BlcnRpZXMiLCJzdGFydFdhcnMiLCJiYXNlVXJsIiwic3BlY2lhbGl0aWVzUmVzcG9uc2UiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFHQSxJQUFNQSw4QkFBOEIsR0FBRyxTQUFqQ0EsOEJBQWlDLENBQUNDLGdCQUFELEVBQThDO0FBQ2pGLFNBQU8sSUFBSUMsV0FBSixDQUFTO0FBQ1pDLElBQUFBLFVBQVUsRUFBRUYsZ0JBQWdCLENBQUNFLFVBRGpCO0FBRVpDLElBQUFBLE9BQU8sRUFBRUgsZ0JBQWdCLENBQUNHLE9BRmQ7QUFHWkMsSUFBQUEsUUFBUSxFQUFFSixnQkFBZ0IsQ0FBQ0ksUUFIZjtBQUlaQyxJQUFBQSxNQUFNLEVBQUVMLGdCQUFnQixDQUFDSyxNQUpiO0FBS1pDLElBQUFBLFNBQVMsRUFBRU4sZ0JBQWdCLENBQUNPLFVBTGhCO0FBTVpDLElBQUFBLFlBQVksRUFBRVIsZ0JBQWdCLENBQUNTLGFBTm5CO0FBT1pDLElBQUFBLE9BQU8sRUFBRVYsZ0JBQWdCLENBQUNVLE9BUGQ7QUFRWkMsSUFBQUEsUUFBUSxFQUFFWCxnQkFBZ0IsQ0FBQ1csUUFSZjtBQVNaQyxJQUFBQSxXQUFXLEVBQUVaLGdCQUFnQixDQUFDYSxZQVRsQjtBQVVaQyxJQUFBQSxPQUFPLEVBQUVkLGdCQUFnQixDQUFDYyxPQVZkO0FBV1pDLElBQUFBLFNBQVMsRUFBRWYsZ0JBQWdCLENBQUNlLFNBWGhCO0FBWVpDLElBQUFBLEtBQUssRUFBRWhCLGdCQUFnQixDQUFDZ0IsS0FaWjtBQWFaQyxJQUFBQSxHQUFHLEVBQUVqQixnQkFBZ0IsQ0FBQ2lCLEdBYlY7QUFjWkMsSUFBQUEsUUFBUSxFQUFFbEIsZ0JBQWdCLENBQUNrQjtBQWRmLEdBQVQsQ0FBUDtBQWdCSCxDQWpCRDs7QUFtQk8sSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFPYixTQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0Q0FFWSxrQkFBc0JjLHVCQUFXQyxTQUFYLENBQXFCQyxPQUEzQyxjQUE4RGhCLFNBQTlELENBRlo7O0FBQUE7QUFFakJpQixVQUFBQSxvQkFGaUI7QUFBQSwyQ0FJaEJ4Qiw4QkFBOEIsQ0FBQ3dCLG9CQUFvQixDQUFDQyxJQUF0QixDQUpkOztBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQU1qQixzREFOaUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaWxtIH0gZnJvbSBcInNyYy9kb21haW5zL2ZpbG1zXCI7XG5cbmltcG9ydCB7IHByb3BlcnRpZXMgfSBmcm9tIFwic3JjL2NvbmZpZ3VyYXRpb25zL3Byb3BlcnRpZXNcIjtcblxuaW1wb3J0IHsgZ2V0IH0gZnJvbSBcIi4uL2Jhc2VBcGlcIjtcbmltcG9ydCB7IGhhbmRsZXJTcGVjaWFsaXR5RXJyb3IgfSBmcm9tIFwiLi9oYW5kbGVyRXJyb3JcIjtcbmltcG9ydCB7IEZpbG1SZXNwb25zZUpzb24gfSBmcm9tIFwiLi9qc29uL2ZpbG1SZXNwb25zZUpzb25cIjtcblxuY29uc3QgbWFwcGVyRmlsbUZyb21GaWxtUmVzcG9uc2VKc29uID0gKGZpbG1SZXNwb25zZUpzb246IEZpbG1SZXNwb25zZUpzb24pOiBGaWxtID0+IHtcbiAgICByZXR1cm4gbmV3IEZpbG0oe1xuICAgICAgICBjaGFyYWN0ZXJzOiBmaWxtUmVzcG9uc2VKc29uLmNoYXJhY3RlcnMsXG4gICAgICAgIGNyZWF0ZWQ6IGZpbG1SZXNwb25zZUpzb24uY3JlYXRlZCxcbiAgICAgICAgZGlyZWN0b3I6IGZpbG1SZXNwb25zZUpzb24uZGlyZWN0b3IsXG4gICAgICAgIGVkaXRlZDogZmlsbVJlc3BvbnNlSnNvbi5lZGl0ZWQsXG4gICAgICAgIGVwaXNvZGVJZDogZmlsbVJlc3BvbnNlSnNvbi5lcGlzb2RlX2lkLFxuICAgICAgICBvcGVuaW5nQ3Jhd2w6IGZpbG1SZXNwb25zZUpzb24ub3BlbmluZ19jcmF3bCxcbiAgICAgICAgcGxhbmV0czogZmlsbVJlc3BvbnNlSnNvbi5wbGFuZXRzLFxuICAgICAgICBwcm9kdWNlcjogZmlsbVJlc3BvbnNlSnNvbi5wcm9kdWNlcixcbiAgICAgICAgcmVsZWFzZURhdGU6IGZpbG1SZXNwb25zZUpzb24ucmVsZWFzZV9kYXRlLFxuICAgICAgICBzcGVjaWVzOiBmaWxtUmVzcG9uc2VKc29uLnNwZWNpZXMsXG4gICAgICAgIHN0YXJzaGlwczogZmlsbVJlc3BvbnNlSnNvbi5zdGFyc2hpcHMsXG4gICAgICAgIHRpdGxlOiBmaWxtUmVzcG9uc2VKc29uLnRpdGxlLFxuICAgICAgICB1cmw6IGZpbG1SZXNwb25zZUpzb24udXJsLFxuICAgICAgICB2ZWhpY2xlczogZmlsbVJlc3BvbnNlSnNvbi52ZWhpY2xlcyxcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBmaW5kQnlFcGlzb2RlSWQgPSBhc3luYyAoZXBpc29kZUlkOiBudW1iZXIpOiBQcm9taXNlPEZpbG0+ID0+IHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBzcGVjaWFsaXRpZXNSZXNwb25zZSA9IGF3YWl0IGdldDxGaWxtUmVzcG9uc2VKc29uPihwcm9wZXJ0aWVzLnN0YXJ0V2Fycy5iYXNlVXJsLCBgL2ZpbG1zLyR7ZXBpc29kZUlkfWApO1xuXG4gICAgICAgIHJldHVybiBtYXBwZXJGaWxtRnJvbUZpbG1SZXNwb25zZUpzb24oc3BlY2lhbGl0aWVzUmVzcG9uc2UuZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgaGFuZGxlclNwZWNpYWxpdHlFcnJvcihlcnJvcik7XG4gICAgfVxufTtcbiJdfQ==